C1976
nc_data <- nc_open('T850_140783.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('MSLP_140783.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(14-07-1983)")+
coord_sf(xlim = c(-40, 30), ylim = c(65,40), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
CB1983<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
CB1983
C1983
C1976
CB1983
nc_data <- nc_open('T850_180706.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('MSLP_180706.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(18-07-2006)")+
coord_sf(xlim = c(-40, 30), ylim = c(65,40), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
C180706<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "bottom")
C180706
#add mslp as contour as layer on top of your ggplot object
C180706<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
C180706
nc_data <- nc_open('T850_190706.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('MSLP_190706.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(19-07-2006)")+
coord_sf(xlim = c(-40, 30), ylim = c(65,40), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
C190706<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
C190706
nc_data <- nc_open('T850_280618.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('MSLP_280618.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_data_msl <- nc_open('MSLP_280618.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
nc_data_msl <- nc_open('Mslp.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(28-06-2018)")+
coord_sf(xlim = c(-40, 30), ylim = c(65,40), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
C280618<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
C280618
#install.packages('ggplot2', dependencies = TRUE)
#install.packages('rlang')
##############
#open directory
##############
setwd("C:/Users/Met Eireann/Desktop/2OTH_&_ERA5/Newplots/small/Era5")
getwd()
nc_data <- nc_open('T850_2018.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('Mslp_2018.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(28-06-2018)")+
coord_sf(xlim = c(-22, 6), ylim = c(60,48), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(28-06-2018)")+
coord_sf(xlim = c(-20, 6), ylim = c(60,48), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
b280618<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
b280618
nc_data <- nc_open('T850_a182006.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('Mslp_182006.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(18-07-2006)")+
coord_sf(xlim = c(-20, 6), ylim = c(60,48), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
b180706<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
b180706
b280618
b180706
nc_data <- nc_open('T850_192006.nc')
lon <- ncvar_get(nc_data, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data, "latitude", verbose = F)
t <- ncvar_get(nc_data, "time")
head(lon)
names(nc_data$dimvar)
ndvi.array <- ncvar_get(nc_data, "t") # store the data in a 3-dimensional array
dim(ndvi.array)
fillvalue <- ncatt_get(nc_data, "t", "_FillValue")
fillvalue
nc_close(nc_data)
ndvi.array[ndvi.array == fillvalue$value] <- NA
ndvi.slice <- ndvi.array
dim(ndvi.array)
r <- raster(t(ndvi.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
#r <- flip(r, direction='y')
head(r)
##############prmsl
##msl
##############
#Connect to the NetCDF file using the `nc_open()` function from the `ncdf4` package. We save the connection to the file as a variable called `nc`.
#install.packages('akima')
library('akima')
nc_data_msl <- nc_open('Mslp_192006.nc')
names(nc_data_msl$var)
lon <- ncvar_get(nc_data_msl, "longitude")
lon[lon > 180] <- lon[lon > 180] - 360
lat <- ncvar_get(nc_data_msl, "latitude", verbose = F)
t <- ncvar_get(nc_data_msl, "time")
head(lon)
ndvi.array_msl <- ncvar_get(nc_data_msl, "msl") # store the data in a 3-dimensional array
dim(ndvi.array_msl)
fillvalue_msl <- ncatt_get(nc_data_msl, "msl", "_FillValue")
fillvalue_msl
nc_close(nc_data_msl)
ndvi.array_msl[ndvi.array_msl == fillvalue_msl$value] <- NA
ndvi.slice_msl <- ndvi.array_msl
dim(ndvi.array_msl)
r_msl <- raster(t(ndvi.slice_msl), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
mslrasdf <-as.data.frame(r_msl, xy=TRUE)
head(mslrasdf)
mslrasdf$layer <-c (mslrasdf$layer /100 )
## run world package
world <- ne_coastline(scale = "large", returnclass = "sf")
class(world)
##Save raster layer as data frames
rasdf <-as.data.frame(r, xy=TRUE)
head(rasdf)
rasdf$layer <- kelvin.to.celsius(rasdf$layer)
names(nc_data$var)
##create ggplot object with layers
p<- ggplot()+
geom_raster(aes(x=x,y=y, fill = layer),data=rasdf)+
geom_sf(fill="transparent", data=world)+
scale_fill_viridis_c(limits = c(-5, 30),name="TEMP [°C]",direction=+1,option = "turbo")+
labs( x = "LONGITUDE", y = "LATITUDE") +
ggtitle("(19-07-2006)")+
coord_sf(xlim = c(-20, 6), ylim = c(60,48), expand = T)+
theme(text=element_text(family="Arial",face="bold", size=9))+
theme_bw()
p
#add mslp as contour as layer on top of your ggplot object
b190706<- p +
geom_contour(aes(x=x,y=y,z=layer),color="black",size=0.0005,data=mslrasdf) +
geom_text_contour(aes(x=x,y=y,z = layer),color="black", data=mslrasdf) + theme(legend.position = "none")
b190706
